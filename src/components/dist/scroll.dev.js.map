{"version":3,"sources":["scroll.js"],"names":["ScrollAnimation","scrollElements","document","querySelectorAll","elementInView","el","dividend","elementTop","getBoundingClientRect","top","window","innerHeight","documentElement","clientHeight","elementOutofView","displayScrollElement","element","classList","add","hideScrollElement","remove","handleScrollAnimation","forEach","addEventListener","removeEventListener"],"mappings":";;;;;;;;;AACA;;;;;;AADA;AAGA,SAASA,eAAT,GAA2B;AACzB,MAAMC,cAAc,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,YAA1B,CAAvB;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,EAAD,EAAsB;AAAA,QAAjBC,QAAiB,uEAAN,CAAM;AAC1C,QAAMC,UAAU,GAAGF,EAAE,CAACG,qBAAH,GAA2BC,GAA9C;AAEA,WACEF,UAAU,IACV,CAACG,MAAM,CAACC,WAAP,IAAsBT,QAAQ,CAACU,eAAT,CAAyBC,YAAhD,IAAgEP,QAFlE;AAID,GAPD;;AASA,MAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACT,EAAD,EAAQ;AAC/B,QAAME,UAAU,GAAGF,EAAE,CAACG,qBAAH,GAA2BC,GAA9C;AAEA,WACEF,UAAU,IAAIG,MAAM,CAACC,WAAP,IAAsBT,QAAQ,CAACU,eAAT,CAAyBC,YAAnD,CADZ;AAGD,GAND;;AAQA,MAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,OAAD,EAAa;AACxCA,IAAAA,OAAO,CAACC,SAAR,CAAkBC,GAAlB,CAAsB,UAAtB;AACD,GAFD;;AAIA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACH,OAAD,EAAa;AACrCA,IAAAA,OAAO,CAACC,SAAR,CAAkBG,MAAlB,CAAyB,UAAzB;AACD,GAFD;;AAIA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClCpB,IAAAA,cAAc,CAACqB,OAAf,CAAuB,UAACjB,EAAD,EAAQ;AAC7B,UAAID,aAAa,CAACC,EAAD,EAAK,IAAL,CAAjB,EAA6B;AAC3BU,QAAAA,oBAAoB,CAACV,EAAD,CAApB;AACD,OAFD,MAEO,IAAIS,gBAAgB,CAACT,EAAD,CAApB,EAA0B;AAC/Bc,QAAAA,iBAAiB,CAACd,EAAD,CAAjB;AACD;AACF,KAND;AAOD,GARD;;AAUA,wBAAU,YAAM;AACdK,IAAAA,MAAM,CAACa,gBAAP,CAAwB,QAAxB,EAAkCF,qBAAlC,EADc,CAGd;;AACA,WAAO,YAAM;AACXX,MAAAA,MAAM,CAACc,mBAAP,CAA2B,QAA3B,EAAqCH,qBAArC;AACD,KAFD;AAGD,GAPD,EAOG,EAPH;AASA,SAAO,IAAP;AACD;;eAEcrB,e","sourcesContent":["// components/ScrollAnimation.js\r\nimport React, { useEffect } from 'react';\r\n\r\nfunction ScrollAnimation() {\r\n  const scrollElements = document.querySelectorAll('.js-scroll');\r\n\r\n  const elementInView = (el, dividend = 1) => {\r\n    const elementTop = el.getBoundingClientRect().top;\r\n\r\n    return (\r\n      elementTop <=\r\n      (window.innerHeight || document.documentElement.clientHeight) / dividend\r\n    );\r\n  };\r\n\r\n  const elementOutofView = (el) => {\r\n    const elementTop = el.getBoundingClientRect().top;\r\n\r\n    return (\r\n      elementTop > (window.innerHeight || document.documentElement.clientHeight)\r\n    );\r\n  };\r\n\r\n  const displayScrollElement = (element) => {\r\n    element.classList.add('scrolled');\r\n  };\r\n\r\n  const hideScrollElement = (element) => {\r\n    element.classList.remove('scrolled');\r\n  };\r\n\r\n  const handleScrollAnimation = () => {\r\n    scrollElements.forEach((el) => {\r\n      if (elementInView(el, 1.25)) {\r\n        displayScrollElement(el);\r\n      } else if (elementOutofView(el)) {\r\n        hideScrollElement(el);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScrollAnimation);\r\n\r\n    // Clean up event listener on component unmount\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScrollAnimation);\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n\r\nexport default ScrollAnimation;\r\n"],"file":"scroll.dev.js"}